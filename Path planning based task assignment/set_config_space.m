function [vrt_config] = set_config_space(vrt,OBS_NUM,OBS_VRT,COV_RANGE)

% Set the configuration space.
%  configuration space is generated by given cover range (COV_RANGE).
%  However, this procedure doesn't consider when the two spaces are
%  overlapped because it's hard to merge as one. But I'll mark the vertices
%  which are in the other configuration space.
%
%%%% REVISION NOTE %%%
%
% REVISION VERSION : 1.10
% REVISION DATE : 2009. 11. 2
% REVISED BY SANGWOO MOON.


% Set the fundamental configuration space :
%  expand the space by given range.
for idx_bldg = 1 : OBS_NUM
    det_cw_ccw = determine_cw_ccw(vrt((OBS_VRT+1)*(idx_bldg-1)+1:(OBS_VRT+1)*idx_bldg,[1,2]));
    vrt_config((OBS_VRT+1)*(idx_bldg-1)+1:(OBS_VRT+1)*idx_bldg,[1,2]) = calculate_config_space(vrt((OBS_VRT+1)*(idx_bldg-1)+1:(OBS_VRT+1)*idx_bldg,[1,2]),OBS_VRT,det_cw_ccw,COV_RANGE);
    vrt_config((OBS_VRT+1)*(idx_bldg-1)+1:(OBS_VRT+1)*idx_bldg,[3,4]) = vrt((OBS_VRT+1)*(idx_bldg-1)+1:(OBS_VRT+1)*idx_bldg,[3,4]);
    vrt_config((OBS_VRT+1)*(idx_bldg-1)+1:(OBS_VRT+1)*idx_bldg,[5,6]) = 0;
end

% If this point is inside of the a configuration space for another
% obstacle, mark that point. this point is "SINK POINT", which is the cause
% of the "CUL-DE_SAC" situation.
for idx_pt = 1 : length(vrt_config(:,1))
    for idx_bldg = 1 : OBS_NUM
        if vrt_config(idx_pt,3) ~= idx_bldg
            if(inpolygon(vrt_config(idx_pt,1),vrt_config(idx_pt,2),vrt_config((OBS_VRT+1)*(idx_bldg-1)+1:(OBS_VRT+1)*idx_bldg,1),vrt_config((OBS_VRT+1)*(idx_bldg-1)+1:(OBS_VRT+1)*idx_bldg,2)))
                vrt_config(idx_pt,5) = 1;
                vrt_config(idx_pt,6) = idx_bldg;
            end
        end
    end
end


